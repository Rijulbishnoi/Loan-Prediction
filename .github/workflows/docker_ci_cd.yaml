# name: Docker CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build and Push Docker Image
#         run: |
#           docker build -t ${{ secrets.DOCKER_USERNAME }}/loan_default_app:latest .
#           docker push ${{ secrets.DOCKER_USERNAME }}/loan_default_app:latest

#       - name: Deploy on AWS EC2
#         env:
#           PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
#           HOST: ${{ secrets.EC2_HOST }}
#           USER: ${{ secrets.EC2_USER }}
#         run: |
#           echo "$PRIVATE_KEY" > private_key.pem
#           chmod 600 private_key.pem
#           ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST <<EOF
#             docker pull ${{ secrets.DOCKER_USERNAME }}/loan_default_app:latest
#             docker stop loan_default_app || true
#             docker rm loan_default_app || true
#             docker run -d -p 8501:8501 --name loan_default_app ${{ secrets.DOCKER_USERNAME }}/loan_default_app:latest
#           EOF
#           rm -f private_key.pem





# ---------------------------------------------------------------------------


name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Debug - Check Files in the Repository
        run: ls -la  # ✅ Check if Dockerfile is present

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

  ci:
    needs: build  # ✅ CI runs only after Build is successful
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/loan_default_app:latest . || exit 1
          docker push ${{ secrets.DOCKER_USERNAME }}/loan_default_app:latest

  cd:
    needs: ci  # ✅ CD runs only after CI is successful
    runs-on: ubuntu-latest
    steps:
      - name: Deploy on AWS EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST <<EOF
            docker pull ${{ secrets.DOCKER_USERNAME }}/loan_default_app:latest
            docker stop loan_default_app || true
            docker rm loan_default_app || true
            docker run -d -p 8501:8501 --name loan_default_app ${{ secrets.DOCKER_USERNAME }}/loan_default_app:latest
          EOF
          rm -f private_key.pem
